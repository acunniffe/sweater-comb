# JSON:API "The Good Parts", subset of JSON:API adopted by API.next

functions:
  - assertObjectPath

rules:

  # JSON:API

  ## Content type

  jsonapi-response-content-type:
    description: Responses must provide a JSON:API content type
    message: 'JSON:API requires "Content-Type: application/vnd.api+json"'
    severity: error
    given: $.paths[*][*].responses[*].content
    then:
      field: 'application/vnd.api+json'
      function: truthy

  ## Response schema

  ### Structure of 200 responses

  jsonapi-response-data:
    description: JSON:API response schema requires data property
    message: '{{description}}'
    severity: error
    given: $.paths[*][*].responses[?(@property.match(/200|201/))].content['application/vnd.api+json']
    then:
      function: assertObjectPath
      functionOptions:
        path: [schema, properties, data, properties]

  jsonapi-response-jsonapi:
    description: JSON:API response schema requires jsonapi property
    message: '{{description}}'
    severity: error
    given: $.paths[*][*].responses[?(@property.match(/200|201/))].content['application/vnd.api+json']
    then:
      function: assertObjectPath
      functionOptions:
        path: [schema, properties, jsonapi, properties]

  jsonapi-response-links:
    description: JSON:API response schema requires links property
    message: '{{description}}'
    severity: error
    given: $.paths[*][*].responses[?(@property.match(/200|201/))].content['application/vnd.api+json']
    then:
      function: assertObjectPath
      functionOptions:
        path: [schema, properties, links, properties]

  jsonapi-response-data-schema:
    description: JSON:API response data schema
    message: "{{error}}"
    severity: error
    given: $.paths[*][*].responses[?(@property.match(/200|201/))].content['application/vnd.api+json'].schema.properties
    then:
      field: data
      function: schema
      functionOptions:
        schema:
          type: object
          properties:
            properties:
              type: object
              properties:
                id:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [string]
                    format:
                      type: string
                      enum: [uuid]
                  required: [type, format]
                attributes:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [object]
                    properties:
                      type: object
                  required: [type, properties]
                type:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [string]
                  required: [type]
              required: [id, attributes, type]
          required: [properties]
  
  ### JsonApi schema

  ### Links schema

  ### Structure of error responses

  ### Error schema

  ### Info message about references (warn without warning)

  ### No includes
