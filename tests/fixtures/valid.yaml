# OpenAPI spec generated by vervet, DO NOT EDIT
info:
  title: Registry
  version: 3.0.0
openapi: 3.0.3
tags:
  - name: Hello World
    description: A hello world example
  - name: Hello World delete
    description: A hello world example
  - name: Hello World post
    description: A hello world example
  - name: Issue Summaries
    description: aaa
  - name: SARIF
    description: A hello world example

components:
  headers:
    DeprecationHeader:
      description: |
        A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
        https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
      schema:
        format: date-time
        type: string
    InternalGlooNormalizedPathHeader:
      description: |
        An internal header used by Snyk's API-Gateway for analytics.
      schema:
        type: string
    RequestIdResponseHeader:
      description: |
        A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
      schema:
        format: uuid
        type: string
    SunsetHeader:
      description: |
        A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
        https://datatracker.ietf.org/doc/html/rfc8594
      schema:
        format: date-time
        type: string
    VersionRequestedResponseHeader:
      description:
        A header containing the version of the endpoint requested by the
        caller.
      schema:
        $ref: '#/components/schemas/Version'
    VersionServedResponseHeader:
      description:
        A header containing the version of the endpoint that was served
        by the API.
      schema:
        $ref: '#/components/schemas/Version'
    VersionStageResponseHeader:
      description: |
        A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
      schema:
        enum:
          - wip
          - experimental
          - beta
          - ga
          - deprecated
          - sunset
        type: string
  parameters:
    Version:
      description: The requested version of the endpoint to process the request
      in: query
      name: version
      required: true
      schema:
        type: string
    EndingBefore:
      description: Return the page of results immediately before this cursor
      in: query
      name: ending_before
      schema:
        type: string
    Limit:
      description: Number of results to return per page
      in: query
      name: limit
      schema:
        default: 10
        format: int32
        maximum: 100
        minimum: 10
        multipleOf: 10
        type: integer
    StartingAfter:
      description: Return the page of results immediately after this cursor
      in: query
      name: starting_after
      schema:
        type: string
  responses:
    '400':
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description:
        'Bad Request: A parameter provided as a part of the request was
        invalid.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    '401':
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description:
        'Unauthorized: the request requires an authentication token or
        a token with more permissions.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    '404':
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Not Found: The resource being operated on could not be found.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    '500':
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description:
        'Internal Server Error: An error was encountered while attempting
        to process the request.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
  schemas:
    Error:
      additionalProperties: false
      properties:
        detail:
          type: string
        id:
          format: uuid
          type: string
        meta:
          additionalProperties: true
          type: object
        source:
          additionalProperties: false
          properties:
            parameter:
              type: string
            pointer:
              type: string
          type: object
        status:
          type: string
      required:
        - status
        - detail
      type: object
    ErrorDocument:
      additionalProperties: false
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          minItems: 1
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      required:
        - jsonapi
        - errors
      type: object
    HelloWorld:
      type: object
      additionalProperties: false
      properties:
        attributes:
          additionalProperties: false
          properties:
            deprecatedField:
              type: string
              example: test
            message:
              type: string
              example: my message
            requestSubject:
              type: object
              additionalProperties: false
              properties:
                clientId:
                  format: uuid
                  type: string
                  example: '2bcd80a9-e343-4601-9393-f820d51ab713'
                publicId:
                  format: uuid
                  type: string
                  example: '2bcd80a9-e343-4601-9393-f820d51ab713'
                type:
                  type: string
                  example: my_type
              required:
                - publicId
                - type
          required:
            - message
            - deprecatedField
            - requestSubject
          type: object
        id:
          format: uuid
          type: string
          example: '2bcd80a9-e343-4601-9393-f820d51ab713'
        type:
          type: string
          example: hello_world
      required:
        - type
        - id
        - attributes
    IssueSummary:
      type: object
      description: Summary description of an issue.
      properties:
        type:
          type: string
          description: Content type
          example: 'issue-summary'
        id:
          type: string
          description: The Issue ID
          format: uuid
          example: '2bcd80a9-e343-4601-9393-f820d51ab713'
        attributes:
          type: object
          properties:
            issueType:
              type: string
              description: >
                Issue type. Implies the existence of a resource
                /issues/detail/{issue-type}/{id}.
              enum:
                - code
            title:
              type: string
              description: The name of the issue
              example: a title
            severity:
              type: string
              description: Severity of an issue
              enum:
                - low
                - medium
                - high
                - critical
            ignored:
              type: boolean
              description: Whether the issue has been ignored
              example: true
          required: ['issueType', 'title', 'severity', 'ignored']
        links:
          $ref: '#/components/schemas/Links'
      required: ['type', 'id', 'attributes', 'links']
    JsonApi:
      additionalProperties: false
      properties:
        version:
          type: string
      required:
        - version
      type: object
    LinkProperty:
      oneOf:
        - type: string
        - additionalProperties: false
          properties:
            href:
              type: string
              example: thing
            meta:
              additionalProperties: true
              type: object
          required:
            - href
            - meta
          type: object
    Links:
      additionalProperties: false
      properties:
        first:
          $ref: '#/components/schemas/LinkProperty'
        last:
          $ref: '#/components/schemas/LinkProperty'
        next:
          $ref: '#/components/schemas/LinkProperty'
        prev:
          $ref: '#/components/schemas/LinkProperty'
        related:
          $ref: '#/components/schemas/LinkProperty'
        self:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    Version:
      pattern: ^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$
      type: string

paths:
  /examples/hello_world/{hello_id}:
    get:
      description: Get a single result from the hello-world example
      operationId: helloWorldGetOne
      tags:
        - Hello World
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/StartingAfter'
        - $ref: '#/components/parameters/EndingBefore'
        - $ref: '#/components/parameters/Limit'
        - description: The id of the hello-world example entity to be retrieved.
          in: path
          name: hello_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/HelloWorld'
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/Links'
                required:
                  - jsonapi
                  - data
                  - links
                type: object
          description: A hello world entity being requested is returned
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
        'default':
          $ref: '#/components/responses/400'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

    post:
      description: Create a single result from the hello_world example
      operationId: helloWorldCreate
      tags:
        - Hello World post
      parameters:
        - $ref: '#/components/parameters/Version'
        - name: hello_id
          in: path
          description: The id of the hello-world example entity to be retrieved.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    message:
                      type: string
                    betaField:
                      type: string
                  additionalProperties: false
                  required: ['message', 'betaField']
              additionalProperties: false
              required: ['attributes']
      responses:
        '201':
          description: A hello world entity being requested is returned
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/HelloWorld'
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/Links'
                required:
                  - jsonapi
                  - data
                  - links
                type: object

    delete:
      description: Delete a result from the hello-world example
      operationId: helloWorldDelete
      tags:
        - Hello World delete
      parameters:
        - $ref: '#/components/parameters/Version'
        - description: The id of the hello-world example entity to be deleted.
          in: path
          name: hello_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/Links'
                required:
                  - jsonapi
                  - links
                type: object
          description: A hello world entity was deleted
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
        'default':
          $ref: '#/components/responses/400'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /org/{org_id}/sarif:
    get:
      description: Get a SARIF document for the org
      operationId: getOrgSARIF
      tags:
        - SARIF
      parameters:
        - $ref: '#/components/parameters/Version'
        - description: The org id
          in: path
          name: org_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/HelloWorld'
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/Links'
                required:
                  - jsonapi
                  - data
                  - links
                type: object
          description: A hello world entity being requested is returned
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
        'default':
          $ref: '#/components/responses/400'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    x-snyk-api-version: '2021-06-01'

  /groups/{group_id}/issues:
    get:
      description: >
        Get a summary of issues on a project or snapshot. Supports
        pagination, filtering by severity and issue type.
        ProjectID must be specified.
      operationId: getIssuesSummary
      tags:
        - Issue Summaries
      parameters:
        - $ref: '#/components/parameters/Version'
        - name: group_id
          in: path
          required: true
          description: The id of the group to return a list of issues for
          schema:
            type: string
            format: uuid
        - name: project_id
          description: Project ID
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: { $ref: '#/components/schemas/IssueSummary' }
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/Links'
                required: ['jsonapi', 'data', 'links']
          description: A SARIF document is returned
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
        'default':
          $ref: '#/components/responses/400'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
servers:
  - description: Snyk Registry
    url: /api/v3
