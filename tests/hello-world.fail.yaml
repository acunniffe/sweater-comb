# OpenAPI spec generated by vervet, DO NOT EDIT
components:
  headers:
    DeprecationHeader:
      description: |
        A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
        https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
      schema:
        format: date-time
        type: string
    InternalGlooNormalizedPathHeader:
      description: |
        An internal header used by Snyk's API-Gateway for analytics.
      schema:
        type: string
    RequestIDResponseHeader:
      description: |
        A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
      schema:
        format: uuid
        type: string
    SunsetHeader:
      description: |
        A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
        https://datatracker.ietf.org/doc/html/rfc8594
      schema:
        format: date-time
        type: string
    VersionRequestedResponseHeader:
      description: A header containing the version of the endpoint requested by the
        caller.
      schema:
        $ref: '#/components/schemas/Version'
    VersionServedResponseHeader:
      description: A header containing the version of the endpoint that was served
        by the API.
      schema:
        $ref: '#/components/schemas/Version'
    VersionStageResponseHeader:
      description: |
        A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
      schema:
        enum:
        - wip
        - experimental
        - beta
        - ga
        - deprecated
        - sunset
        type: string
  parameters:
    Version:
      description: The requested version of the endpoint to process the request
      in: query
      name: version
      required: true
      schema:
        type: string
    ending_before:
      description: Return the page of results immediately before this cursor
      in: query
      name: ending_before
      schema:
        type: string
    limit:
      description: Number of results to return per page
      in: query
      name: limit
      schema:
        default: 10
        format: int32
        maximum: 100
        minimum: 10
        multipleOf: 10
        type: integer
    starting_after:
      description: Return the page of results immediately after this cursor
      in: query
      name: starting_after
      schema:
        type: string
  responses:
    "bad_things":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Something bad happened'
    "400":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Bad Request: A parameter provided as a part of the request was
        invalid.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIDResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "401":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Unauthorized: the request requires an authentication token or
        a token with more permissions.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIDResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "404":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Not Found: The resource being operated on could not be found.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIDResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "500":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Internal Server Error: An error was encountered while attempting
        to process the request.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIDResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
  schemas:
    Error:
      additionalProperties: false
      properties:
        detail:
          type: string
        id:
          format: uuid
          type: string
        meta:
          additionalProperties: true
          type: object
        source:
          additionalProperties: false
          properties:
            parameter:
              type: string
            pointer:
              type: string
          type: object
        status:
          type: string
      required:
      - status
      - detail
      type: object
    ErrorDocument:
      additionalProperties: false
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          minItems: 1
          type: array
        JsonApi:
          $ref: '#/components/schemas/JSONAPI'
      required:
      - JsonApi
      - errors
      type: object
    HelloWorld:
      additionalProperties: false
      properties:
        attributes:
          additionalProperties: false
          properties:
            deprecatedField:
              type: string
            message:
              type: string
            requestSubject:
              additionalProperties: false
              properties:
                clientId:
                  format: uuid
                  type: string
                publicId:
                  format: uuid
                  type: string
                type:
                  type: string
              required:
              - publicId
              - type
              type: object
          required:
          - message
          - deprecatedField
          - requestSubject
          type: object
        id:
          format: uuid
          type: string
        type:
          type: string
      required:
      - type
      - id
      - attributes
      type: object
    JSONAPI:
      additionalProperties: false
      properties:
        version:
          type: string
      required:
      - version
      type: object
    LinkProperty:
      oneOf:
      - type: string
      - additionalProperties: false
        properties:
          href:
            type: string
          meta:
            additionalProperties: true
            type: object
        required:
        - href
        - meta
        type: object
    Links:
      additionalProperties: false
      properties:
        first:
          $ref: '#/components/schemas/LinkProperty'
        last:
          $ref: '#/components/schemas/LinkProperty'
        next:
          $ref: '#/components/schemas/LinkProperty'
        prev:
          $ref: '#/components/schemas/LinkProperty'
        related:
          $ref: '#/components/schemas/LinkProperty'
        self:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    Version:
      pattern: ^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$
      type: string
info:
  title: Registry
  version: 3.0.0
openapi: 3.0.3
paths:
  /examples/hello_world/HelloWorld/hello-world/{hello-id}:
    get:
      description: Get a single result from the hello-world example
      operationId: helloWorldGetOne
      parameters:
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/starting_after'
      - $ref: '#/components/parameters/ending_before'
      - $ref: '#/components/parameters/limit'
      - description: The hello-id of the hello-world example entity to be retrieved.
        in: path
        name: hello-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/HelloWorld'
                  JsonApi:
                    $ref: '#/components/schemas/JSONAPI'
                  links:
                    $ref: '#/components/schemas/Links'
                required:
                - JsonApi
                - data
                - links
                type: object
          description: A hello world entity being requested is returned
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIDResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
    x-snyk-api-version: "2021-06-01"
servers:
- description: Snyk Registry
  url: /api/v3
