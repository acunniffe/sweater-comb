// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`body properties breaking changes fails if a property is removed 1`] = `
Object {
  "base": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "count": Object {
                        "type": "number",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "",
            },
          },
        },
      },
    },
  },
  "changelog": Array [
    Object {
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "count",
          ],
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
          "count",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/count",
        "kind": "field",
      },
      "removed": Object {
        "before": Object {
          "location": Object {
            "conceptualLocation": Object {
              "inResponse": Object {
                "body": Object {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": Array [
                "count",
              ],
              "method": "get",
              "path": "/example",
            },
            "conceptualPath": Array [
              "operations",
              "/example",
              "get",
              "responses",
              "200",
              "application/json",
              "count",
            ],
            "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/count",
            "kind": "field",
          },
          "value": Object {
            "flatSchema": Object {
              "type": "number",
            },
            "key": "count",
            "required": false,
          },
        },
      },
    },
  ],
  "next": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {},
                    "type": "object",
                  },
                },
              },
              "description": "",
            },
          },
        },
      },
    },
  },
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "count",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "count",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/count",
          "kind": "field",
        },
        "removed": Object {
          "before": Object {
            "location": Object {
              "conceptualLocation": Object {
                "inResponse": Object {
                  "body": Object {
                    "contentType": "application/json",
                  },
                  "statusCode": "200",
                },
                "jsonSchemaTrail": Array [
                  "count",
                ],
                "method": "get",
                "path": "/example",
              },
              "conceptualPath": Array [
                "operations",
                "/example",
                "get",
                "responses",
                "200",
                "application/json",
                "count",
              ],
              "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/count",
              "kind": "field",
            },
            "value": Object {
              "flatSchema": Object {
                "type": "number",
              },
              "key": "count",
              "required": false,
            },
          },
        },
      },
      "condition": "not be removed",
      "docsLink": undefined,
      "error": "Cannot read property 'key' of undefined",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "removed field: field undefined",
    },
  ],
}
`;

exports[`body properties breaking changes fails if a required property is added 1`] = `
Object {
  "base": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {},
                  "type": "object",
                },
              },
            },
          },
          "responses": Object {},
        },
      },
    },
  },
  "changelog": Array [
    Object {
      "added": Object {
        "flatSchema": Object {
          "type": "number",
        },
        "key": "count",
        "required": true,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": Array [
            "count",
          ],
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "application/json",
          "count",
        ],
        "jsonPath": "/paths/~1example/get/requestBody/content/application~1json/schema/properties/count",
        "kind": "field",
      },
    },
    Object {
      "changed": Object {
        "after": Object {
          "method": "get",
          "pathPattern": "/example",
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "count": Object {
                      "type": "number",
                    },
                  },
                  "required": Array [
                    "count",
                  ],
                  "type": "object",
                },
              },
            },
          },
        },
        "before": Object {
          "method": "get",
          "pathPattern": "/example",
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {},
                  "type": "object",
                },
              },
            },
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
  ],
  "next": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "count": Object {
                      "type": "number",
                    },
                  },
                  "required": Array [
                    "count",
                  ],
                  "type": "object",
                },
              },
            },
          },
          "responses": Object {},
        },
      },
    },
  },
  "results": Array [
    Object {
      "change": Object {
        "added": Object {
          "flatSchema": Object {
            "type": "number",
          },
          "key": "count",
          "required": true,
        },
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "body": Object {
                "contentType": "application/json",
              },
            },
            "jsonSchemaTrail": Array [
              "count",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "application/json",
            "count",
          ],
          "jsonPath": "/paths/~1example/get/requestBody/content/application~1json/schema/properties/count",
          "kind": "field",
        },
      },
      "condition": "not be required",
      "docsLink": undefined,
      "error": "expected true to be false",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "added field: field count",
    },
  ],
}
`;

exports[`body properties example fails if doesn't exist 1`] = `
Object {
  "base": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {},
        },
      },
    },
  },
  "changelog": Array [
    Object {
      "added": Object {
        "contentType": "application/json",
        "flatSchema": Object {
          "type": "object",
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
        "kind": "body",
      },
    },
    Object {
      "added": Object {
        "flatSchema": Object {
          "type": "string",
        },
        "key": "name",
        "required": false,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "name",
          ],
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
          "name",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/name",
        "kind": "field",
      },
    },
    Object {
      "added": Object {
        "description": "",
        "statusCode": 200,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
        ],
        "jsonPath": "/paths/~1example/get/responses/200",
        "kind": "response",
      },
    },
  ],
  "next": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "",
            },
          },
        },
      },
    },
  },
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "name",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "name",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/name",
          "kind": "field",
        },
        "value": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "name",
          "required": false,
        },
      },
      "condition": "have an example",
      "docsLink": undefined,
      "error": "expected undefined to exist",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "requirement for field: field name",
    },
  ],
}
`;

exports[`body properties example passes if exists 1`] = `
Object {
  "base": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {},
        },
      },
    },
  },
  "changelog": Array [
    Object {
      "added": Object {
        "contentType": "application/json",
        "flatSchema": Object {
          "type": "object",
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
        "kind": "body",
      },
    },
    Object {
      "added": Object {
        "flatSchema": Object {
          "example": "Jane Doe",
          "type": "string",
        },
        "key": "name",
        "required": false,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "name",
          ],
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
          "name",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/name",
        "kind": "field",
      },
    },
    Object {
      "added": Object {
        "description": "",
        "statusCode": 200,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
        ],
        "jsonPath": "/paths/~1example/get/responses/200",
        "kind": "response",
      },
    },
  ],
  "next": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "name": Object {
                        "example": "Jane Doe",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "",
            },
          },
        },
      },
    },
  },
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "name",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "name",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/name",
          "kind": "field",
        },
        "value": Object {
          "flatSchema": Object {
            "example": "Jane Doe",
            "type": "string",
          },
          "key": "name",
          "required": false,
        },
      },
      "condition": "have an example",
      "docsLink": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "requirement for field: field name",
    },
  ],
}
`;

exports[`body properties format fails if format doesn't exist 1`] = `
Object {
  "base": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {},
        },
      },
    },
  },
  "changelog": Array [
    Object {
      "added": Object {
        "contentType": "application/json",
        "flatSchema": Object {
          "type": "object",
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
        "kind": "body",
      },
    },
    Object {
      "added": Object {
        "flatSchema": Object {
          "type": "string",
        },
        "key": "name",
        "required": false,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "name",
          ],
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
          "name",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/name",
        "kind": "field",
      },
    },
    Object {
      "added": Object {
        "description": "",
        "statusCode": 200,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
        ],
        "jsonPath": "/paths/~1example/get/responses/200",
        "kind": "response",
      },
    },
  ],
  "next": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "",
            },
          },
        },
      },
    },
  },
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "name",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "name",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/name",
          "kind": "field",
        },
        "value": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "name",
          "required": false,
        },
      },
      "condition": "have a format when a string",
      "docsLink": undefined,
      "error": "expected undefined to exist",
      "isMust": false,
      "isShould": true,
      "passed": false,
      "where": "requirement for field: field name",
    },
  ],
}
`;

exports[`body properties format passes if not a string 1`] = `
Object {
  "base": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {},
        },
      },
    },
  },
  "changelog": Array [
    Object {
      "added": Object {
        "contentType": "application/json",
        "flatSchema": Object {
          "type": "object",
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
        "kind": "body",
      },
    },
    Object {
      "added": Object {
        "flatSchema": Object {
          "type": "number",
        },
        "key": "count",
        "required": false,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "count",
          ],
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
          "count",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/count",
        "kind": "field",
      },
    },
    Object {
      "added": Object {
        "description": "",
        "statusCode": 200,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
        ],
        "jsonPath": "/paths/~1example/get/responses/200",
        "kind": "response",
      },
    },
  ],
  "next": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "count": Object {
                        "type": "number",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "",
            },
          },
        },
      },
    },
  },
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "count",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "count",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/count",
          "kind": "field",
        },
        "value": Object {
          "flatSchema": Object {
            "type": "number",
          },
          "key": "count",
          "required": false,
        },
      },
      "condition": "have a format when a string",
      "docsLink": undefined,
      "isMust": false,
      "isShould": true,
      "passed": true,
      "where": "requirement for field: field count",
    },
  ],
}
`;

exports[`body properties key fails when not snake case 1`] = `
Object {
  "base": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {},
        },
      },
    },
  },
  "changelog": Array [
    Object {
      "added": Object {
        "contentType": "application/json",
        "flatSchema": Object {
          "type": "object",
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
        "kind": "body",
      },
    },
    Object {
      "added": Object {
        "flatSchema": Object {
          "type": "string",
        },
        "key": "not-snake-case",
        "required": false,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "not-snake-case",
          ],
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
          "not-snake-case",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/not-snake-case",
        "kind": "field",
      },
    },
    Object {
      "added": Object {
        "description": "",
        "statusCode": 200,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
        ],
        "jsonPath": "/paths/~1example/get/responses/200",
        "kind": "response",
      },
    },
  ],
  "next": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "not-snake-case": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "",
            },
          },
        },
      },
    },
  },
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "not-snake-case",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "not-snake-case",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/not-snake-case",
          "kind": "field",
        },
        "value": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "not-snake-case",
          "required": false,
        },
      },
      "condition": "have camel case keys",
      "docsLink": undefined,
      "error": "expected false to be truthy",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "requirement for field: field not-snake-case",
    },
  ],
}
`;

exports[`body properties key passes when snake case 1`] = `
Object {
  "base": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {},
        },
      },
    },
  },
  "changelog": Array [
    Object {
      "added": Object {
        "contentType": "application/json",
        "flatSchema": Object {
          "type": "object",
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
        "kind": "body",
      },
    },
    Object {
      "added": Object {
        "flatSchema": Object {
          "type": "string",
        },
        "key": "is_snake_case",
        "required": false,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "is_snake_case",
          ],
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
          "is_snake_case",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/is_snake_case",
        "kind": "field",
      },
    },
    Object {
      "added": Object {
        "description": "",
        "statusCode": 200,
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "statusCode": "200",
          },
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
        ],
        "jsonPath": "/paths/~1example/get/responses/200",
        "kind": "response",
      },
    },
  ],
  "next": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "is_snake_case": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "",
            },
          },
        },
      },
    },
  },
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "is_snake_case",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "is_snake_case",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/is_snake_case",
          "kind": "field",
        },
        "value": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "is_snake_case",
          "required": false,
        },
      },
      "condition": "have camel case keys",
      "docsLink": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "requirement for field: field is_snake_case",
    },
  ],
}
`;
